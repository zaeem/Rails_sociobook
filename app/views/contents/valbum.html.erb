<div id="page">
  <div id="album-container" class="album-container">
    <div class="navigation-container">
      <div id="thumbs" class="navigation">
        <a class="pageLink prev" href="#" title="Previous Page">Previous</a>
        <ul class="thumbs noscript">
          <%for slide in album_photos(params[:vpid], params[:vcid]) %>
            <li>
              <a class="thumb" name="leaf" href=<%="http://#{request.server_name}:#{request.server_port}#{slide.photo.url(:large)}"%> title=<%=slide.title%>>
                <img src=<%="http://#{request.server_name}:#{request.server_port}#{slide.photo.url(:thumb)}"%> alt=<%="http://#{request.server_name}:#{request.server_port}#{slide.title}"%>/>
              </a>
              <div class="caption">
                <div class="image-title">
                  Title: <%=slide.title%><br/>
                </div>
                <a class="pageLink" href=<%="http://#{request.server_name}:#{request.server_port}/contents/valbum_makeprofile?#{request.query_string}&id=#{slide.id}"%>>Make profile photo</a><br/>  
                <a class="pageLink" href=<%="http://#{request.server_name}:#{request.server_port}#{slide.photo.url}"%>>Download photo</a><br/>
                <%= link_to "Add description", "#", :class=>"pageLink", :id => "edesc_album"%><br/>
                <a class="pageLink" href=<%="http://#{request.server_name}:#{request.server_port}/contents/valbum_removephoto?#{request.query_string}&id=#{slide.id}"%>>Delete photo</a><br/>
                <a class="pageLink" href=<%="http://#{request.server_name}:#{request.server_port}/contents/tag_photo?#{request.query_string}&id=#{slide.id}"%>>Tag photo</a><br/>
             </div>
              
             <div id="edesc_albumview" style="display: none">
                <% @cphoto = slide %>
                <%= form_for(@cphoto, :html => {:multipart => true }) do |f| %>
                  <%= hidden_field_tag "return_address", request.query_string %>    
                  <%= hidden_field_tag "from", "edit_photo"%>
                  <table>
                     <tr><td>Add Description: </td></tr>
                     <tr><td><%= f.text_area :desc, :size=> "40x5"%></td></tr>
                     <tr><td>&nbsp;</td><td><%= f.submit "Update"%></td></tr>
                  </table>
                <%end%>
             </div>
            </li>
          <%end%>
        </ul>
      </div>
    </div>
    <div class="content">
      <div class="slideshow-container">
        <div id="controls" class="controls"></div>
        <div id="loading" class="loader"></div>
        <div id="slideshow" class="slideshow"></div>
      </div>
      <div id="caption" class="caption-container">
        <div class="photo-index"></div>
      </div>
    </div>
    <!-- End Gallery Html Containers -->
    <div style="clear: both;"></div>
  </div>
</div>
<script type="text/javascript">
  jQuery(document).ready(function($) {
    // We only want these styles applied when javascript is enabled
    $('div.content').css('display', 'block');

    // Initially set opacity on thumbs and add
    // additional styling for hover effect on thumbs
    var onMouseOutOpacity = 0.67;
    $('#thumbs ul.thumbs li, div.navigation a.pageLink').opacityrollover({
      mouseOutOpacity:   onMouseOutOpacity,
      mouseOverOpacity:  1.0,
      fadeSpeed:         'fast',
      exemptionSelector: '.selected'
    });

    // Initialize Advanced Galleriffic Gallery
    var gallery = $('#thumbs').galleriffic({
      delay:                     2500,
      numThumbs:                 10,
      preloadAhead:              10,
      enableTopPager:            false,
      enableBottomPager:         false,
      imageContainerSel:         '#slideshow',
      controlsContainerSel:      '#controls',
      captionContainerSel:       '#caption',
      loadingContainerSel:       '#loading',
      renderSSControls:          true,
      renderNavControls:         true,
      playLinkText:              'Play Slideshow',
      pauseLinkText:             'Pause Slideshow',
      prevLinkText:              '&lsaquo; Previous Photo',
      nextLinkText:              'Next Photo &rsaquo;',
      nextPageLinkText:          'Next &rsaquo;',
      prevPageLinkText:          '&lsaquo; Prev',
      enableHistory:             true,
      autoStart:                 false,
      syncTransitions:           true,
      defaultTransitionDuration: 900,
      onSlideChange:             function(prevIndex, nextIndex) {
        // 'this' refers to the gallery, which is an extension of $('#thumbs')
        this.find('ul.thumbs').children()
        .eq(prevIndex).fadeTo('fast', onMouseOutOpacity).end()
        .eq(nextIndex).fadeTo('fast', 1.0);

        // Update the photo index display
        this.$captionContainer.find('div.photo-index')
        .html('Photo '+ (nextIndex+1) +' of '+ this.data.length);
      },
      onPageTransitionOut:       function(callback) {
        this.fadeTo('fast', 0.0, callback);
      },
      onPageTransitionIn:        function() {
        var prevPageLink = this.find('a.prev').css('visibility', 'hidden');
        var nextPageLink = this.find('a.next').css('visibility', 'hidden');

        // Show appropriate next / prev page links
        if (this.displayedPage > 0)
          prevPageLink.css('visibility', 'visible');

        var lastPage = this.getNumPages() - 1;
        if (this.displayedPage < lastPage)
          nextPageLink.css('visibility', 'visible');

        this.fadeTo('fast', 1.0);
      }
    });

    /**************** Event handlers for custom next / prev page links **********************/

    gallery.find('a.prev').click(function(e) {
      gallery.previousPage();
      e.preventDefault();
    });

    gallery.find('a.next').click(function(e) {
      gallery.nextPage();
      e.preventDefault();
    });
    
    $('#edesc_ablum').click(function(){
       $('#edesc_albumview').dialog({title: 'Add description...',width: 450});   
    });
  
    /****************************************************************************************/

    /**** Functions to support integration of galleriffic with the jquery.history plugin ****/

    // PageLoad function
    // This function is called when:
    // 1. after calling $.historyInit();
    // 2. after calling $.historyLoad();
    // 3. after pushing "Go Back" button of a browser
    function pageload(hash) {
      // alert("pageload: " + hash);
      // hash doesn't contain the first # character.
      if(hash) {
        $.galleriffic.gotoImage(hash);
      } else {
        gallery.gotoIndex(0);
      }
    }

    // Initialize history plugin.
    // The callback is called at once by present location.hash.
    $.historyInit(pageload, "advanced.html");

    // set onlick event for buttons using the jQuery 1.3 live method
    $("a[rel='history']").live('click', function(e) {
      if (e.button != 0) return true;

      var hash = this.href;
      hash = hash.replace(/^.*#/, '');

      // moves to a new page.
      // pageload is called at once.
      // hash don't contain "#", "?"
      $.historyLoad(hash);

      return false;
    });
  });
</script>